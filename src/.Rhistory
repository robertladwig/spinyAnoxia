5.548838 ,
5.558671 ,
5.571464 ,
5.585492 ,
5.5990334,
5.6102877,
5.617358 ,
5.6182175,
5.6107244,
5.592672 ,
5.561575 ,
5.510433 ,
5.4485903,
4.642193 ,
4.562624 ,
4.454399 ),
'hybrid_framework' = c(5.3130593,
5.4644446,
5.4817333,
5.4907265,
5.4954987,
5.497843 ,
5.4988413,
5.4993215,
5.4996657,
5.4998813,
5.499949 ,
5.499905 ,
5.4998093,
5.4997125,
5.4996376,
5.499588 ,
5.499559 ,
5.4995403,
5.499507 ,
5.4991155,
5.4932528,
5.493241 ,
4.7292147,
4.7368016,
4.736737 ), 'hybrid' = c(5.5684853, 5.5397763, 5.72175  , 5.770272 , 5.7109776, 5.6291947,
5.5734167, 5.5491276, 5.5441628, 5.548838 , 5.558671 , 5.571464 ,
5.585492 , 5.5990334, 5.6102877, 5.617358 , 5.6182175, 5.6107244,
5.592672 , 5.561575 , 5.510433 , 5.4485903, 4.642193 , 4.562624 ,
4.454399 )
'depth' = seq(1,25,1))
library(tidyverse)
library(patchwork)
df = data.frame('finetuned' = c(5.5684853,
5.5397763,
5.72175  ,
5.770272 ,
5.7109776,
5.6291947,
5.5734167,
5.5491276,
5.5441628,
5.548838 ,
5.558671 ,
5.571464 ,
5.585492 ,
5.5990334,
5.6102877,
5.617358 ,
5.6182175,
5.6107244,
5.592672 ,
5.561575 ,
5.510433 ,
5.4485903,
4.642193 ,
4.562624 ,
4.454399 ),
'hybrid_framework' = c(5.3130593,
5.4644446,
5.4817333,
5.4907265,
5.4954987,
5.497843 ,
5.4988413,
5.4993215,
5.4996657,
5.4998813,
5.499949 ,
5.499905 ,
5.4998093,
5.4997125,
5.4996376,
5.499588 ,
5.499559 ,
5.4995403,
5.499507 ,
5.4991155,
5.4932528,
5.493241 ,
4.7292147,
4.7368016,
4.736737 ), 'hybrid' = c(5.5684853, 5.5397763, 5.72175  , 5.770272 , 5.7109776, 5.6291947,
5.5734167, 5.5491276, 5.5441628, 5.548838 , 5.558671 , 5.571464 ,
5.585492 , 5.5990334, 5.6102877, 5.617358 , 5.6182175, 5.6107244,
5.592672 , 5.561575 , 5.510433 , 5.4485903, 4.642193 , 4.562624 ,
4.454399 ),
'depth' = seq(1,25,1))
g1 <- ggplot(df) +
geom_path(aes(x = finetuned, y = depth, col = 'finetuned')) +
geom_path(aes(x = hybrid, y = depth, col = 'hybrid')) +
ggtitle('results after first heating step with same input data') +
scale_y_reverse()
g2 <- ggplot(df) + geom_line(aes(x = depth,y = finetuned - hybrid)) +
ylab('residual: finetuned - hybrid')
g1 / g2
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(tidyverse)
library(timeSeries)
library(statcomp)
library(zoo)
library(rLakeAnalyzer)
library(lubridate)
library(pracma)
library(broom)
library(ggpmisc)
library(patchwork)
library(Boruta)
library(caret)
library(relaimpo)
library(corrplot)
library(RColorBrewer)
physics <- read_csv('../data_processed/physical_timings.csv')
anoxic <- read_csv("../data_processed/anoxicfactor.csv")
fluxes <- read_csv('../data_processed/dosinks.csv')
biomass <- read_csv('../data_processed/3c_biomass_duration.csv')
discharge <- read_csv('../data_processed/discharge.csv')
cw <-  read_csv('../data_processed/clearwater.csv')
nutrients <- read_csv('../data_processed/nutrients.csv')
spiny <- read_csv('../data_processed/spiny.csv')
col.pre <- "steelblue"
col.post <- "orange3"
df.physics <- physics
df.anoxic <- anoxic %>%
dplyr::filter(year != 1995 & year != 2021) %>%
dplyr::select(year, AF)
df.flux <- fluxes %>%
dplyr::filter(year != 1995 & year != 2021) %>%
dplyr::select(year, Jz, Jv, Ja)
df.biomass <- biomass %>%
dplyr::filter(Year != 1995 & Year != 2021) %>%
rename(year = Year)
df.nutrients <- nutrients %>%
dplyr::filter(year != 1995 & year != 2021) %>%
rename(year = year)
df.discharge <- discharge %>%
dplyr::filter(year != 1995 & year != 2021)
df.cw <- cw %>%
dplyr::filter(year > 1995)
df.spiny <- spiny %>%
dplyr::filter(year != 1995 & year != 2021) %>%
rename(year = year, Spiny = mean)
df <- merge(df.physics, df.anoxic, by = 'year')
df <- merge(df, df.flux, by = 'year')
df <- merge(df, df.biomass, by = 'year')
df <- merge(df, df.discharge, by = 'year')
df <- merge(df, df.cw, by = 'year')
df <- merge(df, df.nutrients, by = 'year')
df <- merge(df, df.spiny, by = 'year')
str(df)
head(df)
df.red <- df[, c("AF",'strat_on' , "strat_off" , "strat_duration" ,
"ice_on" , "ice_off" , "ice_duration" ,
"Jz" , "Jv" , "Ja" ,
"Days.0.5.mg.L" , "Days.1.mg.L" , "Days.1.5.mg.L" ,
"Days.2.mg.L" , "Days.3.mg.L" ,
"sum.discharge" ,# "max.discharge" , "min.discharge" ,
"Clearwater.Duration"  , "Spiny" ,
"PO4.P_surf", "PO4.P_bot", "NO3.NO2.N_surf", "NO3.NO2.N_bot", "RSi")]
sc.info <- scale(df.red)
df.data <- as.data.frame(scale(df.red))
?Boruta
df.data %>%
mutate(Spiny = ifelse(Spiny > 0, 1, 0))
df.data = df.data %>%
mutate(Spiny = ifelse(Spiny > 0, 1, 0))
boruta_output <- Boruta(AF ~ .,
data = df.data, doTrace=2,
maxRuns = 1e5)  # perform Boruta search
boruta_signif <- names(boruta_output$finalDecision[boruta_output$finalDecision %in% c("Confirmed", "Tentative")])  # collect Confirmed and Tentative variables
print(boruta_signif)  # significant variables
plot(boruta_output, cex.axis=1.5, las=3, xlab="", main="")  # plot variable importance
df.data = df.data %>%
mutate(Spiny = as.factor(ifelse(Spiny > 0, 1, 0)))
boruta_output <- Boruta(AF ~ .,
data = df.data, doTrace=2,
maxRuns = 1e5)  # perform Boruta search
boruta_signif <- names(boruta_output$finalDecision[boruta_output$finalDecision %in% c("Confirmed", "Tentative")])  # collect Confirmed and Tentative variables
print(boruta_signif)  # significant variables
plot(boruta_output, cex.axis=1.5, las=3, xlab="", main="")  # plot variable importance
final.boruta <- TentativeRoughFix(boruta_output)
print(final.boruta)
plot(final.boruta)
boruta.df <- attStats(final.boruta)
boruta_signif =getSelectedAttributes(final.boruta, withTentative = F)
print(boruta.df)
print(boruta_signif)
idx = which( colnames(df.data) %in% boruta_signif)
hyp.data = df.data[,idx]
hyp.data$AF = df.data$AF
hypo1 <- lm(AF ~ ., data = hyp.data)
summary(hypo1)
sum.hypo1 <-summary(hypo1)
step(hypo1)
hyp.data
str(hyp.data)
step(hypo1)
hypo1 <- lm(AF ~ strat_off  + Days.1.5.mg.L + Spiny , data = hyp.data)
sum.hypo1 <-summary(hypo1)
AIC(hypo1)
BIC(hypo1)
drop1(hypo1, test = 'F')
relImportance <-calc.relimp(hypo1, type = "lmg", rela = TRUE)
sort(relImportance$lmg, decreasing=TRUE)
boot <- boot.relimp(hypo1, b = 1000, type = c("lmg",
"last", "first", "pratt"), rank = TRUE,
diff = TRUE, rela = TRUE)
booteval.relimp(boot, lev =0.9, nodiff=TRUE) # print result
varImp(hypo1, scale = TRUE)
df.spiny
tail(df.spiny)
df.spiny$Spiny
hyp.data$Spiny
df.data$Spiny
df.spiny
df.spiny$Spiny
df$Spiny
df.red$Spiny
df.red <- df[, c("AF",'strat_on' , "strat_off" , "strat_duration" ,
"ice_on" , "ice_off" , "ice_duration" ,
"Jz" , "Jv" , "Ja" ,
"Days.0.5.mg.L" , "Days.1.mg.L" , "Days.1.5.mg.L" ,
"Days.2.mg.L" , "Days.3.mg.L" ,
"sum.discharge" ,# "max.discharge" , "min.discharge" ,
"Clearwater.Duration"  , "Spiny" ,
"PO4.P_surf", "PO4.P_bot", "NO3.NO2.N_surf", "NO3.NO2.N_bot", "RSi")]
sc.info <- scale(df.red)
df.data = df.data %>%
mutate(Spiny = as.factor(ifelse(Spiny > 0, 1, 0)))
df.data <- as.data.frame(scale(df.red))
df.data = df.data %>%
mutate(Spiny = (ifelse(Spiny > 0, 1, 0)))
df.data <- as.data.frame(scale(df.red))
boruta_output <- Boruta(AF ~ .,
data = df.data, doTrace=2,
maxRuns = 1e5)  # perform Boruta search
boruta_signif <- names(boruta_output$finalDecision[boruta_output$finalDecision %in% c("Confirmed", "Tentative")])  # collect Confirmed and Tentative variables
print(boruta_signif)  # significant variables
plot(boruta_output, cex.axis=1.5, las=3, xlab="", main="")  # plot variable importance
final.boruta <- TentativeRoughFix(boruta_output)
print(final.boruta)
plot(final.boruta)
boruta.df <- attStats(final.boruta)
boruta_signif =getSelectedAttributes(final.boruta, withTentative = F)
print(boruta.df)
print(boruta_signif)
idx = which( colnames(df.data) %in% boruta_signif)
hyp.data = df.data[,idx]
hyp.data$AF = df.data$AF
hypo1 <- lm(AF ~ ., data = hyp.data)
summary(hypo1)
sum.hypo1 <-summary(hypo1)
step(hypo1)
df.data$Spiny
df.red <- df[, c("AF",'strat_on' , "strat_off" , "strat_duration" ,
"ice_on" , "ice_off" , "ice_duration" ,
"Jz" , "Jv" , "Ja" ,
"Days.0.5.mg.L" , "Days.1.mg.L" , "Days.1.5.mg.L" ,
"Days.2.mg.L" , "Days.3.mg.L" ,
"sum.discharge" ,# "max.discharge" , "min.discharge" ,
"Clearwater.Duration"  , "Spiny" ,
"PO4.P_surf", "PO4.P_bot", "NO3.NO2.N_surf", "NO3.NO2.N_bot", "RSi")]
sc.info <- scale(df.red)
df.data.spiny = df.data %>%
mutate(Spiny = (ifelse(Spiny > 0, 1, 0)))
df.data <- as.data.frame(scale(df.red))
df.data$Spiny = df.data-spiny$spiny
df.data$Spiny = df.data.spiny$spiny
df.data$Spiny
df.data$Spiny = df.data.spiny$Spiny
df.data$Spiny
df.red <- df[, c("AF",'strat_on' , "strat_off" , "strat_duration" ,
"ice_on" , "ice_off" , "ice_duration" ,
"Jz" , "Jv" , "Ja" ,
"Days.0.5.mg.L" , "Days.1.mg.L" , "Days.1.5.mg.L" ,
"Days.2.mg.L" , "Days.3.mg.L" ,
"sum.discharge" ,# "max.discharge" , "min.discharge" ,
"Clearwater.Duration"  , "Spiny" ,
"PO4.P_surf", "PO4.P_bot", "NO3.NO2.N_surf", "NO3.NO2.N_bot", "RSi")]
sc.info <- scale(df.red)
df.data$Spiny
df.red <- df[, c("AF",'strat_on' , "strat_off" , "strat_duration" ,
"ice_on" , "ice_off" , "ice_duration" ,
"Jz" , "Jv" , "Ja" ,
"Days.0.5.mg.L" , "Days.1.mg.L" , "Days.1.5.mg.L" ,
"Days.2.mg.L" , "Days.3.mg.L" ,
"sum.discharge" ,# "max.discharge" , "min.discharge" ,
"Clearwater.Duration"  , "Spiny" ,
"PO4.P_surf", "PO4.P_bot", "NO3.NO2.N_surf", "NO3.NO2.N_bot", "RSi")]
sc.info <- scale(df.red)
df.data.spiny = df.red %>%
mutate(Spiny = (ifelse(Spiny > 0, 1, 0)))
df.data <- as.data.frame(scale(df.red))
df.data$Spiny = df.data.spiny$Spiny
df.data$Spiny
boruta_output <- Boruta(AF ~ .,
data = df.data, doTrace=2,
maxRuns = 1e5)  # perform Boruta search
boruta_signif <- names(boruta_output$finalDecision[boruta_output$finalDecision %in% c("Confirmed", "Tentative")])  # collect Confirmed and Tentative variables
print(boruta_signif)  # significant variables
plot(boruta_output, cex.axis=1.5, las=3, xlab="", main="")  # plot variable importance
final.boruta <- TentativeRoughFix(boruta_output)
print(final.boruta)
plot(final.boruta)
boruta.df <- attStats(final.boruta)
boruta_signif =getSelectedAttributes(final.boruta, withTentative = F)
print(boruta.df)
print(boruta_signif)
idx = which( colnames(df.data) %in% boruta_signif)
hyp.data = df.data[,idx]
hyp.data$AF = df.data$AF
hypo1 <- lm(AF ~ ., data = hyp.data)
summary(hypo1)
sum.hypo1 <-summary(hypo1)
step(hypo1)
hypo1 <- lm(AF ~ strat_off  + Days.1.5.mg.L + Spiny , data = hyp.data)
sum.hypo1 <-summary(hypo1)
AIC(hypo1)
BIC(hypo1)
drop1(hypo1, test = 'F')
relImportance <-calc.relimp(hypo1, type = "lmg", rela = TRUE)
sort(relImportance$lmg, decreasing=TRUE)
boot <- boot.relimp(hypo1, b = 1000, type = c("lmg",
"last", "first", "pratt"), rank = TRUE,
diff = TRUE, rela = TRUE)
booteval.relimp(boot, lev =0.9, nodiff=TRUE) # print result
sum.hypo1
hyp.data
sum.hypo1
?lm
?Boruta
glm(AF ~ strat_off  + Days.1.5.mg.L + Spiny , data = hyp.data)
?glm
plot(sum.hypo1)
sum.hypo1
plot(hypo1)
df.red <- df[, c("AF",'strat_on' , "strat_off" , "strat_duration" ,
"ice_on" , "ice_off" , "ice_duration" ,
"Jz" , "Jv" , "Ja" ,
"Days.0.5.mg.L" , "Days.1.mg.L" , "Days.1.5.mg.L" ,
"Days.2.mg.L" , "Days.3.mg.L" ,
"sum.discharge" ,# "max.discharge" , "min.discharge" ,
"Clearwater.Duration"  , "Spiny" ,
"PO4.P_surf", "PO4.P_bot", "NO3.NO2.N_surf", "NO3.NO2.N_bot", "RSi")]
sc.info <- scale(df.red)
# df.data.spiny = df.red %>%
# mutate(Spiny = (ifelse(Spiny > 0, 1, 0)))
df.data <- as.data.frame(scale(df.red))
df.data$Spiny = df.data.spiny$Spiny
boruta_output <- Boruta(AF ~ .,
data = df.data, doTrace=2,
maxRuns = 1e5)  # perform Boruta search
boruta_signif <- names(boruta_output$finalDecision[boruta_output$finalDecision %in% c("Confirmed", "Tentative")])  # collect Confirmed and Tentative variables
print(boruta_signif)  # significant variables
plot(boruta_output, cex.axis=1.5, las=3, xlab="", main="")  # plot variable importance
final.boruta <- TentativeRoughFix(boruta_output)
print(final.boruta)
plot(final.boruta)
boruta.df <- attStats(final.boruta)
boruta_signif =getSelectedAttributes(final.boruta, withTentative = F)
print(boruta.df)
print(boruta_signif)
idx = which( colnames(df.data) %in% boruta_signif)
hyp.data = df.data[,idx]
hyp.data$AF = df.data$AF
hypo1 <- lm(AF ~ ., data = hyp.data)
summary(hypo1)
sum.hypo1 <-summary(hypo1)
step(hypo1)
hyp.data
df.red <- df[, c("AF",'strat_on' , "strat_off" , "strat_duration" ,
"ice_on" , "ice_off" , "ice_duration" ,
"Jz" , "Jv" , "Ja" ,
"Days.0.5.mg.L" , "Days.1.mg.L" , "Days.1.5.mg.L" ,
"Days.2.mg.L" , "Days.3.mg.L" ,
"sum.discharge" ,# "max.discharge" , "min.discharge" ,
"Clearwater.Duration"  , "Spiny" ,
"PO4.P_surf", "PO4.P_bot", "NO3.NO2.N_surf", "NO3.NO2.N_bot", "RSi")]
sc.info <- scale(df.red)
# df.data.spiny = df.red %>%
# mutate(Spiny = (ifelse(Spiny > 0, 1, 0)))
df.data <- as.data.frame(scale(df.red))
# df.data$Spiny = df.data.spiny$Spiny
boruta_output <- Boruta(AF ~ .,
data = df.data, doTrace=2,
maxRuns = 1e5)  # perform Boruta search
boruta_signif <- names(boruta_output$finalDecision[boruta_output$finalDecision %in% c("Confirmed", "Tentative")])  # collect Confirmed and Tentative variables
print(boruta_signif)  # significant variables
plot(boruta_output, cex.axis=1.5, las=3, xlab="", main="")  # plot variable importance
final.boruta <- TentativeRoughFix(boruta_output)
print(final.boruta)
plot(final.boruta)
boruta.df <- attStats(final.boruta)
boruta_signif =getSelectedAttributes(final.boruta, withTentative = F)
print(boruta.df)
print(boruta_signif)
idx = which( colnames(df.data) %in% boruta_signif)
hyp.data = df.data[,idx]
hyp.data$AF = df.data$AF
hypo1 <- lm(AF ~ ., data = hyp.data)
summary(hypo1)
sum.hypo1 <-summary(hypo1)
step(hypo1)
hypo1 <- lm(AF ~ strat_off  + Days.1.5.mg.L + Spiny , data = hyp.data)
sum.hypo1 <-summary(hypo1)
hypo1 <- lm(AF ~ strat_off + ice_duration + Days.1.mg.L + PO4.P_surf +
PO4.P_bot + Spiny , data = hyp.data)
sum.hypo1 <-summary(hypo1)
AIC(hypo1)
BIC(hypo1)
drop1(hypo1, test = 'F')
relImportance <-calc.relimp(hypo1, type = "lmg", rela = TRUE)
sort(relImportance$lmg, decreasing=TRUE)
boot <- boot.relimp(hypo1, b = 1000, type = c("lmg",
"last", "first", "pratt"), rank = TRUE,
diff = TRUE, rela = TRUE)
booteval.relimp(boot, lev =0.9, nodiff=TRUE) # print result
varImp(hypo1, scale = TRUE)
modeleq1 <- paste0('y = ', round(sum.hypo1$coefficients[1,1],2),
' + ',round(sum.hypo1$coefficients[2,1],2),' Strat.off',
' + ',round(sum.hypo1$coefficients[3,1],2),' Ice.dur',
' + ',round(sum.hypo1$coefficients[4,1],2),' Days.1',
' + ')
modeleq2 <- paste0(round(sum.hypo1$coefficients[5,1],2),' SWF',
' + ',round(sum.hypo1$coefficients[6,1],2),' PO4.surf',
' + ',round(sum.hypo1$coefficients[7,1],2),' PO4.bot',
' + e, where e ~ N(0,',round(sum.hypo1$sigma,2),")")
pred.int <- predict(hypo1, interval = "confidence")
pred.int <- pred.int * attr(sc.info, 'scaled:scale')[1] + attr(sc.info, 'scaled:center')[1]
mydata <- cbind(data.frame('AF'  = df$AF), pred.int)
my.formula <- y ~ (x)
# PLOT: linear model
p <- ggplot(mydata, aes(fit, AF)) +
stat_smooth(method = lm, col = 'black') +
geom_point(size = 2) +
xlab('Predicted Anoxic Factor [d per season]')+
ylab('Anoxic Factor [d per season]')+
theme_minimal()+
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ (x)) +
stat_poly_eq(formula = my.formula,
aes(label = paste( ..rr.label.., sep = "~~~")),
parse = TRUE,size = rel(4.5),
label.y = 0.05,
label.x = 0.1)  +
# annotate("text", x = 61, y = 82.5, label = modeleq1, size = 3)+
# annotate("text", x = 61, y = 80, label = modeleq2, size = 3)+
# annotate("text", x = 60, y = 77.5, label = (paste0('R2 = ',round(sum.hypo1$r.squared,2))), size =5) +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=0, hjust=1));p
p.linear <- p + geom_line(aes(y = lwr), color = "grey", linetype = "dashed")+
geom_line(aes(y = upr), color = "grey", linetype = "dashed"); p.linear
modeleq1
modeleq2
sort(relImportance$lmg, decreasing=TRUE)
corrplot(hyp.data[:,c('stat_off','ice_duration')])
res=cor(hyp.data2, method = c("pearson"))
hyp.data
hyp.data2 <- hyp.data[, c(1,2,3,6,7)]
colnames(hyp.data2) = c('Strat.dur', 'Total.sink', 'Days.0.5','ClearWat.dur', 'Anoxic.Factor', "SWF")
res=cor(hyp.data2, method = c("pearson"))
head(hyp.data)
hyp.data2 <- hyp.data[, c(1,3,5,9,10, 8, 10)]
# AF ~ strat_off + ice_duration + Days.1.mg.L + PO4.P_surf + PO4.P_bot + Spiny
colnames(hyp.data2) = c('Strat.dur', 'Ice.dur', 'Days.1.5','PO4.surf','PO$.bot','SWF', 'Anoxic.Factor')
res=cor(hyp.data2, method = c("pearson"))
res
plot(res)
corrplot(res)
colnames(hyp.data)
idx <- match(c( 'strat_off' , 'ice_duration' , 'Days.1.mg.L' , 'PO4.P_surf' , 'PO4.P_bot' , 'Spiny'), colnames(hyp.data))
hyp.data2 <- hyp.data[, idx]
# AF ~ strat_off + ice_duration + Days.1.mg.L + PO4.P_surf + PO4.P_bot + Spiny
colnames(hyp.data2) = c('Strat.dur', 'Ice.dur', 'Days.1.5','PO4.surf','PO$.bot','SWF', 'Anoxic.Factor')
colnames(hyp.data)
idx <- match(c( 'strat_off' , 'ice_duration' , 'Days.1.mg.L' , 'PO4.P_surf' , 'PO4.P_bot' , 'Spiny', 'AF'), colnames(hyp.data))
hyp.data2 <- hyp.data[, idx]
# AF ~ strat_off + ice_duration + Days.1.mg.L + PO4.P_surf + PO4.P_bot + Spiny
colnames(hyp.data2) = c('Strat.dur', 'Ice.dur', 'Days.1.0','PO4.surf','PO$.bot','SWF', 'Anoxic.Factor')
res=cor(hyp.data2, method = c("pearson"))
corrplot(res)
hyp.data2
hyp.data
idx <- match(c( 'strat_off' , 'ice_duration' , 'Days.1.mg.L' , 'PO4.P_surf' , 'PO4.P_bot' , 'Spiny', 'AF'), colnames(hyp.data))
hyp.data2 <- df.red[, idx]
# AF ~ strat_off + ice_duration + Days.1.mg.L + PO4.P_surf + PO4.P_bot + Spiny
colnames(hyp.data2) = c('Strat.dur', 'Ice.dur', 'Days.1.0','PO4.surf','PO$.bot','SWF', 'Anoxic.Factor')
res=cor(hyp.data2, method = c("pearson"))
corrplot(res)
hyp.data2
idx
idx <- match(c( 'strat_off' , 'ice_duration' , 'Days.1.mg.L' , 'PO4.P_surf' , 'PO4.P_bot' , 'Spiny', 'AF'), colnames(df.red))
hyp.data2 <- df.red[, idx]
# AF ~ strat_off + ice_duration + Days.1.mg.L + PO4.P_surf + PO4.P_bot + Spiny
colnames(hyp.data2) = c('Strat.dur', 'Ice.dur', 'Days.1.0','PO4.surf','PO$.bot','SWF', 'Anoxic.Factor')
res=cor(hyp.data2, method = c("pearson"))
corrplot(res)
?corrplot
